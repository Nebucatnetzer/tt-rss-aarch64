name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "30 5 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: sudo apt-get install -y qemu binfmt-support qemu-user-static
      
    - name: Enable multiarch in Docker
      run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    
    - name: Clone ttrss-docker-compose repository
      run: git clone -b static-dockerhub https://git.tt-rss.org/fox/ttrss-docker-compose.git

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build image $IMAGE_NAME
      run:  docker buildx build --tag $IMAGE_NAME --platform linux/arm64 .
      working-directory: ttrss-docker-compose/src/app
      env:
        IMAGE_NAME: ttrss-fpm-pgsql-static
        
    - name: Push image $IMAGE_NAME
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
      env:
        IMAGE_NAME: ttrss-fpm-pgsql-static
        
    - name: Build image $IMAGE_NAME
      run:  docker buildx build --tag $IMAGE_NAME --platform linux/arm64 .
      working-directory: ttrss-docker-compose/src/web-nginx
      env:
        IMAGE_NAME: ttrss-web-nginx
        
    - name: Push image $IMAGE_NAME
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
      env:
        IMAGE_NAME: ttrss-web-nginx
